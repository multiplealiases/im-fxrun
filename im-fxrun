#!/usr/bin/env bash

set -o nounset
set -o errexit

function banner() {
    cat << EOF
Generate images from colorspace components of ImageMagick -fx "scripts"
and save the scripts + parameters used for reproductibility
EOF
}

function usage() {
    echo Usage: im-fxrun \[options\] \(colorspace components\) \[extra\]
}

function help_text(){
    cat << EOF
$(banner)

$(usage)

Options:
-s, --size          size of image
-c, --colorspace    colorspace of image
-o, --output        output filename of image
-h, --help          this help
EOF
}

function err_file_notexist(){
    1>&2 printf ''\''%s'\'': file does not exist\n' "$1"
    exit 1
}

function err_file_exist(){
    1>&2 printf ''\''%s'\'': file exists\n' "$1"
    exit 1
}

function err_no_image(){
    1>&2 echo error generating image or saving auxiliary data: cleaning up
    set +o errexit
    rm "$filename"
    for ext in $(seq 0 $((channels - 1))) extra
    do
        rm "$filename"."$ext"
    done
    exit 1
}

function channels_in_colorspace(){
identify -verbose -colorspace "$1" canvas:black \
    | grep Channels \
    | cut -f 2 -d : \
    | cut -f 1 -d . \
    | tr -d ' '
}

components=( )

if [[ ${#@} == 0 ]]
then
    help_text
    exit 1
fi

ARGS="$(getopt --options h.c:,s:,o: --long help,colorspace:,size:,output: -- "$@")"
eval set -- "$ARGS"
while [[ ${#@} != 0 ]]
do
    case "$1" in
    -s | --size)
        size="$2"
        shift 2
        ;;
    -c | --colorspace)
        colorspace="$2"
        shift 2
        ;;
    -h | --help)
        help_text
        exit 1
        ;;
    -o | --output)
        filename="$2"
        shift 2
        ;;
    --)
        shift
        ;;
    *)
        set +o nounset
        if [[ ! -e "$1" ]]
        then
            err_file_notexist "$1"
        fi
        set -o nounset
        components+=("$1")
        shift
        ;;
    esac
done

channels=$(channels_in_colorspace "$colorspace")

if [[ (${#components[@]} == "$((channels + 1))") ]]
then
    source "${components[$((channels + 1))]}"
elif [[ ${#components[@]} != "$channels" ]]
then
    1>&2 printf 'Expected 3 or 4 components, got %s\n' ${#components[@]}
    exit 1
fi

set +o nounset
if [[ -z "$filename" ]]
then
    filename="$(mktemp "$(date +%s)"-XXXX --suffix .png)"
fi
set -o nounset

for ext in $(seq 0 $((channels - 1))) extra
do
    [[ -e "$filename"."$ext" ]] && err_file_exist "$filename"."$ext"
    touch "$filename"."$ext"
done

trap 'err_no_image' ERR EXIT

channelcmd=( )
for i in $(seq 0 $((channels - 1)) )
do
    channelcmd+=( -channel "$i" -fx @"${components[$i]}" )
    cat "${components[$i]}" > "$filename"."$i"
done

magick -size "$size" canvas:black \
-set colorspace "$colorspace" "${channelcmd[@]}" \
"$filename"

cat << EOF > "$filename".extra
size=$size
colorspace=$colorspace
EOF

trap '' ERR EXIT
